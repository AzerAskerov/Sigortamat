using System;
using System.Threading.Tasks;
using Hangfire;
using SigortaYoxla.Services;

namespace SigortaYoxla.Jobs
{
    /// <summary>
    /// WhatsApp mesaj g√∂nd…ôrm…ô job-u
    /// </summary>
    public class WhatsAppJob
    {
        private readonly WhatsAppService _whatsappService;

        public WhatsAppJob()
        {
            _whatsappService = new WhatsAppService();
        }

        /// <summary>
        /// WhatsApp mesaj g√∂nd…ôrm…ô job-u - h…ôr 2 d…ôqiq…ô i≈ül…ôyir
        /// </summary>
        [Queue("whatsapp")]
        public async Task ProcessWhatsAppQueue()
        {
            Console.WriteLine("\nüì± WHATSAPP JOB BA≈ûLADI");
            Console.WriteLine("=".PadRight(40, '='));
            
            var unprocessedItems = QueueRepository.GetUnprocessedWhatsAppItems();
            
            if (unprocessedItems.Count == 0)
            {
                Console.WriteLine("üìã Proses olunacaq WhatsApp queue-u yoxdur");
                return;
            }

            Console.WriteLine($"üìã {unprocessedItems.Count} WhatsApp queue-u tapƒ±ldƒ±");

            foreach (var item in unprocessedItems)
            {
                try
                {
                    Console.WriteLine($"\nüîÑ ƒ∞≈ül…ônir: {item.PhoneNumber}");
                    
                    var success = await _whatsappService.SendMessageAsync(item.PhoneNumber, item.Message);
                    
                    if (success)
                    {
                        QueueRepository.MarkAsProcessed(item.Id);
                        Console.WriteLine($"‚úÖ Tamamlandƒ±: {item.PhoneNumber}");
                    }
                    else
                    {
                        QueueRepository.MarkAsProcessed(item.Id, "WhatsApp g√∂nd…ôrm…ô uƒüursuz");
                        Console.WriteLine($"‚ùå Uƒüursuz: {item.PhoneNumber}");
                    }
                    
                    // Rate limiting - WhatsApp √º√ß√ºn daha uzun g√∂zl…ôm…ô
                    await Task.Delay(3000);
                }
                catch (Exception ex)
                {
                    QueueRepository.MarkAsProcessed(item.Id, ex.Message);
                    Console.WriteLine($"‚ùå X…ôta: {item.PhoneNumber} - {ex.Message}");
                }
            }

            Console.WriteLine($"‚úÖ WhatsApp job tamamlandƒ±: {unprocessedItems.Count} element");
        }
    }
}
