-- =====================================================
-- SAD∆è LEAD FUNKSIONALLIƒûI TEST
-- =====================================================

PRINT 'üß™ LEAD V∆è NOTIFICATION TEST BA≈ûLAYIR'
PRINT '====================================='

-- Test data t…ômizl…ôm…ô
DECLARE @TestCarNumber1 NVARCHAR(20) = 'TEST001';
DECLARE @TestCarNumber2 NVARCHAR(20) = 'TEST002';

DELETE FROM Notifications WHERE LeadId IN (
    SELECT Id FROM Leads WHERE CarNumber IN (@TestCarNumber1, @TestCarNumber2)
);
DELETE FROM Leads WHERE CarNumber IN (@TestCarNumber1, @TestCarNumber2);
DELETE FROM InsuranceRenewalTracking WHERE UserId IN (
    SELECT Id FROM Users WHERE CarNumber IN (@TestCarNumber1, @TestCarNumber2)
);
DELETE FROM Users WHERE CarNumber IN (@TestCarNumber1, @TestCarNumber2);

PRINT 'üóëÔ∏è Test data t…ômizl…ôndi'

-- =====================================================
-- TEST 1: NoInsuranceImmediate Lead
-- =====================================================

PRINT ''
PRINT 'üß™ TEST 1: NoInsuranceImmediate Lead'
PRINT '==================================='

-- User yarat
INSERT INTO Users (CarNumber, PhoneNumber, NotificationEnabled, CreatedAt) 
VALUES (@TestCarNumber1, '0501234567', 1, GETDATE());

DECLARE @UserId1 INT = SCOPE_IDENTITY();
PRINT '‚úÖ User yaradƒ±ldƒ±: ' + CAST(@UserId1 AS NVARCHAR(10));

-- Lead yarat
INSERT INTO Leads (UserId, CarNumber, LeadType, Notes, CreatedAt, IsConverted)
VALUES (@UserId1, @TestCarNumber1, 'NoInsuranceImmediate', 'Test - sƒ±ƒüorta tapƒ±lmadƒ±', GETDATE(), 0);

DECLARE @LeadId1 INT = SCOPE_IDENTITY();
PRINT '‚úÖ Lead yaradƒ±ldƒ±: ' + CAST(@LeadId1 AS NVARCHAR(10));

-- Notification yarat
INSERT INTO Notifications (LeadId, Channel, Message, Status, CreatedAt)
VALUES (@LeadId1, 'wa', 
        'üö® ' + @TestCarNumber1 + ' - SIGORTA YOXDUR! D…ôrhal m√º≈üt…ôriy…ô t…ôklif g√∂nd…ôrm…ôk √º√ß√ºn …ôlaq…ô saxlayƒ±n. üìû 0501234567', 
        'pending', GETDATE());

DECLARE @NotificationId1 INT = SCOPE_IDENTITY();
PRINT '‚úÖ Notification yaradƒ±ldƒ±: ' + CAST(@NotificationId1 AS NVARCHAR(10));

-- =====================================================
-- TEST 2: RenewalWindow Lead
-- =====================================================

PRINT ''
PRINT 'üß™ TEST 2: RenewalWindow Lead'
PRINT '============================'

-- User yarat (renewal window il…ô)
INSERT INTO Users (CarNumber, PhoneNumber, EstimatedRenewalDay, EstimatedRenewalMonth, 
                   RenewalWindowStart, RenewalWindowEnd, NotificationEnabled, CreatedAt) 
VALUES (@TestCarNumber2, '0559876543', 15, 3, '2024-03-01', '2024-03-15', 1, GETDATE());

DECLARE @UserId2 INT = SCOPE_IDENTITY();
PRINT '‚úÖ User 2 yaradƒ±ldƒ±: ' + CAST(@UserId2 AS NVARCHAR(10));

-- Lead yarat
INSERT INTO Leads (UserId, CarNumber, LeadType, Notes, CreatedAt, IsConverted)
VALUES (@UserId2, @TestCarNumber2, 'RenewalWindow', 'Test - yenil…ônm…ô tarixi yaxƒ±nla≈üƒ±r', GETDATE(), 0);

DECLARE @LeadId2 INT = SCOPE_IDENTITY();
PRINT '‚úÖ Lead 2 yaradƒ±ldƒ±: ' + CAST(@LeadId2 AS NVARCHAR(10));

-- Notification yarat
INSERT INTO Notifications (LeadId, Channel, Message, Status, CreatedAt)
VALUES (@LeadId2, 'wa', 
        'üìÖ ' + @TestCarNumber2 + ' - Yenil…ônm…ô tarixi yaxƒ±nla≈üƒ±r! T…ôxmini tarix: 15/3 üìû 0559876543', 
        'pending', GETDATE());

DECLARE @NotificationId2 INT = SCOPE_IDENTITY();
PRINT '‚úÖ Notification 2 yaradƒ±ldƒ±: ' + CAST(@NotificationId2 AS NVARCHAR(10));

-- =====================================================
-- N∆èTIC∆èL∆èRƒ∞ YOXLA
-- =====================================================

PRINT ''
PRINT 'üìä TEST N∆èTIC∆èL∆èRƒ∞'
PRINT '=================='

-- Users
PRINT ''
PRINT 'üë• USERS:'
SELECT 
    Id,
    CarNumber,
    PhoneNumber,
    EstimatedRenewalDay,
    EstimatedRenewalMonth,
    CONVERT(VARCHAR, RenewalWindowStart, 23) as RenewalWindowStart,
    CONVERT(VARCHAR, RenewalWindowEnd, 23) as RenewalWindowEnd,
    NotificationEnabled
FROM Users 
WHERE CarNumber IN (@TestCarNumber1, @TestCarNumber2)
ORDER BY Id;

-- Leads
PRINT ''
PRINT 'üìã LEADS:'
SELECT 
    Id,
    UserId,
    CarNumber,
    LeadType,
    Notes,
    IsConverted,
    CONVERT(VARCHAR, CreatedAt, 120) as CreatedAt
FROM Leads 
WHERE CarNumber IN (@TestCarNumber1, @TestCarNumber2)
ORDER BY Id;

-- Notifications
PRINT ''
PRINT 'üîî NOTIFICATIONS:'
SELECT 
    Id,
    LeadId,
    Channel,
    LEFT(Message, 50) + '...' as MessagePreview,
    Status,
    CONVERT(VARCHAR, CreatedAt, 120) as CreatedAt,
    ApprovedAt,
    SentAt
FROM Notifications 
WHERE LeadId IN (@LeadId1, @LeadId2)
ORDER BY Id;

-- Statistics
PRINT ''
PRINT 'üìà STATISTIKALAR:'
SELECT 
    LeadType,
    COUNT(*) as TotalLeads,
    COUNT(CASE WHEN IsConverted = 1 THEN 1 END) as ConvertedLeads
FROM Leads 
WHERE CarNumber IN (@TestCarNumber1, @TestCarNumber2)
GROUP BY LeadType;

-- Pending notifications
PRINT ''
PRINT '‚è≥ PENDING NOTIFICATIONS:'
SELECT 
    l.CarNumber,
    l.LeadType,
    n.Status,
    LEFT(n.Message, 30) + '...' as MessagePreview
FROM Leads l 
JOIN Notifications n ON l.Id = n.LeadId 
WHERE n.Status = 'pending' 
  AND l.CarNumber IN (@TestCarNumber1, @TestCarNumber2);

-- =====================================================
-- MANUAL APPROVAL TEST
-- =====================================================

PRINT ''
PRINT 'üß™ TEST 3: Manual Approval'
PRINT '=========================='

-- ƒ∞lk notification-u approve et
UPDATE Notifications 
SET Status = 'approved', ApprovedAt = GETDATE() 
WHERE Id = @NotificationId1;

PRINT '‚úÖ Notification ' + CAST(@NotificationId1 AS NVARCHAR(10)) + ' approved edildi';

-- Approved notifications yoxla
PRINT ''
PRINT '‚úÖ APPROVED NOTIFICATIONS:'
SELECT 
    Id,
    LeadId,
    Status,
    CONVERT(VARCHAR, ApprovedAt, 120) as ApprovedAt
FROM Notifications 
WHERE Status = 'approved' 
  AND LeadId IN (@LeadId1, @LeadId2);

PRINT ''
PRINT 'üéâ B√úT√úN TESTL∆èR TAMAMLANDI!'
PRINT '============================'
PRINT '‚úÖ Lead yaratma - OK'
PRINT '‚úÖ Notification yaratma - OK'  
PRINT '‚úÖ User relationship - OK'
PRINT '‚úÖ Manual approval - OK'
PRINT ''
PRINT 'üìù NOT: Telegram bot v…ô WhatsApp inteqrasiyasƒ± kod-da implement edilmi≈üdir'
PRINT '     ancaq real Telegram.Bot package-ƒ± …ôlav…ô edilm…ôlidir.' 